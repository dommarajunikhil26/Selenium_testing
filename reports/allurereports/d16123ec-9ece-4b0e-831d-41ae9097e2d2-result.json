{"name": "test_enterDataInForm", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <pages.FormPage.FormPage object at 0x7fd3406f8700>, locatorValue = 'emai', locatorType = 'id'\n\n    def waitForElement(self, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n            locatorByType = self.getLocatorType(locatorType)\n            wait = WebDriverWait(self.driver, 25, 1, ignored_exceptions=[ElementNotVisibleException, NoSuchElementException])\n>           element = wait.until(EC.presence_of_element_located((locatorByType, locatorValue)))\n\n../base/BasePage.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"49db6790e2cb642ac9c47a41ee3876ca\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fd3309cb940>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000100f7d0b8 cxxbridge1$str$ptr + 1887276\nE       1   chromedriver                        0x0000000100f75794 cxxbridge1$str$ptr + 1856264\nE       2   chromedriver                        0x0000000100b8482c cxxbridge1$string$len + 88524\nE       3   chromedriver                        0x0000000100bc8834 cxxbridge1$string$len + 367060\nE       4   chromedriver                        0x0000000100c0048c cxxbridge1$string$len + 595500\nE       5   chromedriver                        0x0000000100bbd474 cxxbridge1$string$len + 321044\nE       6   chromedriver                        0x0000000100bbe0e4 cxxbridge1$string$len + 324228\nE       7   chromedriver                        0x0000000100f44a9c cxxbridge1$str$ptr + 1656336\nE       8   chromedriver                        0x0000000100f494f8 cxxbridge1$str$ptr + 1675372\nE       9   chromedriver                        0x0000000100f2a980 cxxbridge1$str$ptr + 1549556\nE       10  chromedriver                        0x0000000100f49ca8 cxxbridge1$str$ptr + 1677340\nE       11  chromedriver                        0x0000000100f1c690 cxxbridge1$str$ptr + 1491460\nE       12  chromedriver                        0x0000000100f66af0 cxxbridge1$str$ptr + 1795684\nE       13  chromedriver                        0x0000000100f66c6c cxxbridge1$str$ptr + 1796064\nE       14  chromedriver                        0x0000000100f753c8 cxxbridge1$str$ptr + 1855292\nE       15  libsystem_pthread.dylib             0x000000018d909f94 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x000000018d904d34 thread_start + 8\n\n../venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <pages.FormPage.FormPage object at 0x7fd3406f8700>, text = 'admin@gmail.com', locatorValue = 'emai', locatorType = 'id'\n\n    def sendText(self,text, locatorValue, locatorType=\"id\"):\n        try:\n            locatorType = locatorType.lower()\n>           element = self.waitForElement(locatorValue, locatorType)\n\n../base/BasePage.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.FormPage.FormPage object at 0x7fd3406f8700>, locatorValue = 'emai', locatorType = 'id'\n\n    def waitForElement(self, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n            locatorByType = self.getLocatorType(locatorType)\n            wait = WebDriverWait(self.driver, 25, 1, ignored_exceptions=[ElementNotVisibleException, NoSuchElementException])\n            element = wait.until(EC.presence_of_element_located((locatorByType, locatorValue)))\n            self.log.info(f\"WebElement found with locatorValue: {locatorValue} and locatorType: {locatorType}\")\n        except:\n            self.log.error(f\"WebElement not found with locatorValue: {locatorValue} and locatorType: {locatorType}\")\n            print_stack()\n            self.takeScreenShot(locatorType)\n>           assert False\nE           AssertionError\n\n../base/BasePage.py:92: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Selenium_Framework.tests.test_form_page.FormPageTest testMethod=test_enterDataInForm>\n\n    @pytest.mark.run(order=2)\n    def test_enterDataInForm(self):\n        time.sleep(5)\n        self.fp.enterName()\n>       self.fp.enterEmail()\n\ntest_form_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../pages/FormPage.py:36: in enterEmail\n    self.sendText(\"admin@gmail.com\", self._enterEmail, \"id\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.FormPage.FormPage object at 0x7fd3406f8700>, text = 'admin@gmail.com', locatorValue = 'emai', locatorType = 'id'\n\n    def sendText(self,text, locatorValue, locatorType=\"id\"):\n        try:\n            locatorType = locatorType.lower()\n            element = self.waitForElement(locatorValue, locatorType)\n            element.send_keys(text)\n            self.log.info(f\"Sent the text: {text} on WebElement with locatorValue: {locatorValue} and locatorType: {locatorType}\")\n        except:\n            self.log.error(f\"Unable to send the text: {text} on WebElement with locatorValue: {locatorValue} and locatorType: {locatorType}\")\n            self.takeScreenShot(locatorType)\n            print_stack()\n>           assert False\nE           AssertionError\n\n../base/BasePage.py:133: AssertionError"}, "steps": [{"name": "Entered Name", "status": "passed", "start": 1723335407308, "stop": 1723335407308}], "attachments": [{"name": "id", "source": "abb7260d-0767-45bb-9914-00420017bfb4-attachment.png", "type": "image/png"}, {"name": "id", "source": "bcfe81d6-49f6-4fb1-80f5-34c9204bb7bc-attachment.png", "type": "image/png"}, {"name": "log", "source": "4baa529d-433a-4367-8e33-577aae36b581-attachment.txt", "type": "text/plain"}], "start": 1723335401642, "stop": 1723335433065, "uuid": "b7e9c328-db84-436f-a790-b33310d866cc", "historyId": "61cfe26ef7f5eb8e0b105774abb672c9", "testCaseId": "61cfe26ef7f5eb8e0b105774abb672c9", "fullName": "test_form_page.FormPageTest#test_enterDataInForm", "labels": [{"name": "tag", "value": "run(order=2)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setUpClass', 'setUpMethod')"}, {"name": "suite", "value": "test_form_page"}, {"name": "subSuite", "value": "FormPageTest"}, {"name": "host", "value": "Nikhils-Air.knology.net"}, {"name": "thread", "value": "12917-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_form_page"}]}